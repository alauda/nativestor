apiVersion: v1
kind: Namespace
metadata:
  name: topolvm-system
  labels:
    app.kubernetes.io/name: topolvm-system
    topolvm.cybozu.com/webhook: ignore

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-node
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["topolvm.cybozu.com"]
    resources: ["logicalvolumes", "logicalvolumes/status"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["topolvm-node"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-node
subjects:
  - kind: ServiceAccount
    name: topolvm-node
    namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-node

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: topolvm-node
spec:
  privileged: true
  allowPrivilegeEscalation: true
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'secret'
    - 'hostPath'
  allowedHostPaths:
    - pathPrefix: "/var/lib/kubelet"
      readOnly: false
    - pathPrefix: "/run/topolvm"
      readOnly: false
    - pathPrefix: "/etc/topolvm"
      readOnly: false
  hostNetwork: false
  hostPID: true
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-node
  namespace: topolvm-system


---


apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: topolvm-system-controller

subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-system-controller

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-provisioner-runner

subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-provisioner-runner

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role

subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: ClusterRole
  name: external-attacher-runner
  apiGroup: rbac.authorization.k8s.io

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: ClusterRole
  name: external-resizer-runner
  apiGroup: rbac.authorization.k8s.io



---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-system-controller
rules:
  - apiGroups: ["policy", "apps", "extensions"]
    resources: ["poddisruptionbudgets",  "deployments",  "replicasets"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses","csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["topolvm.cybozu.com"]
    resources: ["logicalvolumes", "logicalvolumes/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes", "csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-attacher-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments", "volumeattachments/status"]
    verbs: ["get", "list", "watch", "update", "patch"]

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-resizer-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---

apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: topolvm.cybozu.com
spec:
  attachRequired: true
  podInfoOnMount: true
  storageCapacity: true
  volumeLifecycleModes:
    - Persistent
    - Ephemeral

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-election
  namespace: topolvm-system
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: Role
  name: leader-election
  apiGroup: rbac.authorization.k8s.io
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-cfg
  namespace: topolvm-system
subjects:
  - kind: ServiceAccount
    namespace: topolvm-system
    name: topolvm-controller
roleRef:
  kind: Role
  name: external-provisioner-cfg
  apiGroup: rbac.authorization.k8s.io

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role-cfg
  namespace: topolvm-system
subjects:
  - kind: ServiceAccount
    name: topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: Role
  name: external-attacher-cfg
  apiGroup: rbac.authorization.k8s.io

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role-cfg
  namespace: topolvm-system
subjects:
  - kind: ServiceAccount
    name: topolvm-controller
    namespace: topolvm-system
roleRef:
  kind: Role
  name: external-resizer-cfg
  apiGroup: rbac.authorization.k8s.io

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-election
  namespace: topolvm-system
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["configmaps/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-cfg
  namespace: topolvm-system
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-attacher-cfg
  namespace: topolvm-system
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-resizer-cfg
  namespace: topolvm-system
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---

apiVersion: v1
kind: Service
metadata:
  name: topolvm-controller
  namespace: topolvm-system
spec:
  selector:
    app.kubernetes.io/name: topolvm-controller
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8443

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-controller
  namespace: topolvm-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-operator
  namespace: topolvm-system

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-operator
  namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topolvm-operator
subjects:
  - kind: ServiceAccount
    name: topolvm-operator
    namespace: topolvm-system

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-global
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-global
subjects:
  - kind: ServiceAccount
    name: topolvm-operator
    namespace: topolvm-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topolvm-operator
  namespace: topolvm-system
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - services
    verbs:
      - get
      - list
      - watch
      - patch
      - create
      - update
      - delete
  - apiGroups:
      - apps
      - extensions
    resources:
      - daemonsets
      - statefulsets
      - deployments
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - batch
    resources:
      - cronjobs
    verbs:
      - delete


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-global
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - create
      - get
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch", "update", "delete" ]
  - apiGroups:
      - ""
    resources:
      # Pod access is needed for fencing
      - nodes/proxy
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
      - persistentvolumes
      - persistentvolumeclaims
      - endpoints
    verbs:
      - get
      - list
      - watch
      - patch
      - create
      - update
      - delete
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - topolvm.cybozu.com
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - cybozu.com
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - policy
      - apps
      - extensions
    resources:
      # This is for the clusterdisruption controller
      - poddisruptionbudgets
      # This is for both clusterdisruption and nodedrain controllers
      - deployments
      - replicasets
    verbs:
      - "*"
  - apiGroups:
      - healthchecking.openshift.io
    resources:
      - machinedisruptionbudgets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - machine.openshift.io
    resources:
      - machines
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - storage.k8s.io
    resources:
      - csidrivers
    verbs:
      - create
      - delete
      - get
      - update
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - network-attachment-definitions
    verbs:
      - get
---


apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topolvm-preparevg
  namespace: topolvm-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - patch
      - create
      - update
      - delete

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topolvm-preparevg
rules:
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
    resourceNames: ["topolvm-preparevg"]
  - apiGroups:
      - topolvm.cybozu.com
    resources:
      - "*"
    verbs:
      - "*"


---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-preparevg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: topolvm-preparevg
subjects:
  - kind: ServiceAccount
    name: topolvm-preparevg
    namespace: topolvm-system





---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: topolvm-preparevg
  namespace: topolvm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topolvm-preparevg
subjects:
  - kind: ServiceAccount
    name: topolvm-preparevg
    namespace: topolvm-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: topolvm-preparevg
  namespace: topolvm-system


---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: topolvm-preparevg
spec:
  privileged: true
  allowPrivilegeEscalation: true
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'secret'
    - 'hostPath'
  allowedHostPaths:
    - pathPrefix: "/dev/"
      readOnly: false
    - pathPrefix: "/run/udev"
      readOnly: false
  hostNetwork: true
  hostPID: true
  hostIPC: true
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
